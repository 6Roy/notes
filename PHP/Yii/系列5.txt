gii的作用

生成一个model类
生成一个form表单
生成一个含有增删改查的控制器



index文件请求->响应的步骤

1、执行index文件，执行入口哦文件，读取配置文件，读取应用实体
2、路由解析，r=site/index,解析完成转向
3、执行sitecontroller/index然后做好
4、执行具体的动作
5、继续执行过滤（是够满足用户权限、post数据是否合理等等条件）
6、 从模型提取数据
7、放到视图模板中渲染页面
8、渲染的视图经过相应处理组件反馈给用户


三、各个部分的作用
入口脚本文件：
设定好全局变量
引入了yii的核心类
创建了应用主体


应用主体：
application（博客等应用系统）
在这里是web/application中的一个类的对象
管理yii的整体结构
可以用Yii::$app访问对象
id属性，区分其他部分
basepath制定根目录
defaultRoute（缺省的r值）



控制器文件（主要工作）
yii\web\controller类继承而来
负责处理请求（接收数据）生成响应（分配数据）

有action方法组成，形成动作
每个动作都会产生一个响应的前端视图页面

render（）负责向前端传递数据



视图文件
yii\web\view应用组件的帮助下，应用视图模板文件，进行构造和渲染完成。
html代码（静态部分）和PHP代码（动态部分）生成


布局文件
即相当于页面的结构。
布局文件中的$content变量是视图文件中的代码
main.php是布局文件，可以仿照写布局
如何变换布局$this->layout = 布局文件名称


四、模型类
1、模型的内容：
属性、属性标签、快赋值、验证规则、数据导出。
2、模板属性的定义和访问方式
属性等价于业务数据
$model = new CoForm();
$model['name']='weixi'给对象赋值
属性标签：制定属相显示出来的额标签attributelabels(){}使用数组，键值对，键值对名称为属性名，值为显示名
3、块赋值
使用load函数可以直接将表单数据赋值给对象
4、验证规则
rule（）的内容，在一个数组中，有两个变量，前者为数据，后者为要求，
$this->refresh()对页面进行刷新，属于controller。


五、表单的创建
ActiveForm表单类
<?= $from->field($medel,'username')->textInput()->hint('Please enter your name')->label('Name')?>

控制器中吧model中的数据传给了视图

帮助类
html::tag() 
Html::submitButton()


五、gii的应用


























